#
# 
# this file should be sourced from ~/.bash_profile
#
#
basePath="$HOME/aws"
credPath="$basePath/creds"

# pretty osx specific right now
export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home

ec2_tools="$basePath/cli_tools/ec2-api-tools"

if [ -e $ec2_tools ]; then
    if [ ! `echo $PATH | grep "$ec2_tools"` ]; then
        export PATH="$PATH:$ec2_tools/bin"
    fi

    export EC2_HOME="$ec2_tools"
fi

# 
# Handle ELB ... it has very different env. variabls
# and the way it handles credentials. Thanks AWS. Thanks... 
#
elb_tools="$basePath/cli_tools/ElasticLoadBalancing"
credentialsFile="$basePath/credentialsFile.txt"
if [ -e $elb_tools ]; then
    if [ ! `echo $PATH | grep "$elb_tools"` ]; then
        export PATH="$PATH:$elb_tools/bin"
    fi

    export AWS_ELB_HOME="$elb_tools"
    export AWS_CREDENTIAL_FILE=$credentialsFile
fi

# to modify the shell's environment we need to run 
# in the same environment (shell scripts are child envs)

function aws {
    ERROR=

    if [ -z $1 ]
    then
        available=$(ls -1 $credPath | tr "\n" "|" | sed 's/|$//')
        echo "Usage: aws [$available]"
        echo
        echo "Example: "
        echo "> aws `ls -1 $credPath | head -1`"
        echo
        echo "Current AWS Environment"
        echo "-----------------------"
        echo "AWS_ENV              = $AWS_ENV"
        echo "AWS_ACCESS_KEY       = $AWS_ACCESS_KEY"
        echo "AWS_SECRET_KEY       = `echo $AWS_SECRET_KEY | cut -c 1-5`..."
        echo "AWS_CREDENTIAL_FILE  = $AWS_CREDENTIAL_FILE"
        echo
        ERROR="TRUE"
    fi

    if [ -z $ERROR ]
    then
        credFile="$credPath/$1"
        if [ ! -f $credFile ]
        then 
            echo "ERROR: Environment $1 path ($credFile) does not exist"
            ERROR="TRUE"
        fi
    fi

    if [ -z $ERROR ]
    then
        export AWS_ENV=$1
        source $credFile

        # update the credentials file
        echo "AWSAccessKeyId=$AWS_ACCESS_KEY" > $credentialsFile
        echo "AWSSecretKey=$AWS_SECRET_KEY" >> $credentialsFile

        echo $1 > "$basePath/last"
    fi

}

export -f aws

# restore the previous setting
if [ -f $basePath/last ]; then
    aws $(cat $basePath/last)
fi
